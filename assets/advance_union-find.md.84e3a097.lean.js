import{o as n,c as s,b as a,d as t}from"./app.a0fc6f0b.js";const o='{"title":"并查集算法思想","description":"","frontmatter":{},"headers":[{"level":2,"title":"基础版本","slug":"基础版本"},{"level":2,"title":"进阶版本","slug":"进阶版本"},{"level":2,"title":"题型一","slug":"题型一"},{"level":3,"title":"200. 岛屿数量","slug":"_200-岛屿数量"},{"level":3,"title":"547. 省份数量","slug":"_547-省份数量"}],"relativePath":"advance/union-find.md","lastUpdated":1635046375356}',e={},c=a("h1",{id:"并查集算法思想"},[a("a",{class:"header-anchor",href:"#并查集算法思想","aria-hidden":"true"},"#"),t(" 并查集算法思想")],-1),p=a("p",null,[t("视频："),a("a",{href:"https://www.bilibili.com/video/BV1sy4y1q79M?p=74",target:"_blank",rel:"noopener noreferrer"},"https://www.bilibili.com/video/BV1sy4y1q79M?p=74")],-1),l=a("h2",{id:"基础版本"},[a("a",{class:"header-anchor",href:"#基础版本","aria-hidden":"true"},"#"),t(" 基础版本")],-1),u=a("p",null,"本质：找 root 节点",-1),k=a("p",null,"2个方法：",-1),i=a("ul",null,[a("li",null,"union：合并2 个元素，同一个根节点"),a("li",null,"find：找到某个元素的根节点")],-1),r=a("p",null,"使用：",-1),d=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token function"},"union"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},","),t(" y"),a("span",{class:"token punctuation"},")"),t("\n\n"),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),w=a("p",null,"特点：模板化，基本题目都是套用同一个模板",-1),y=a("p",null,"理解：",-1),m=a("p",null,"生活中的例子：",-1),f=a("ul",null,[a("li",null,"A司令——军长——团长A1-团长A2——士兵"),a("li",null,"B司令——军长——团长B1-团长B2——士兵")],-1),h=a("p",null,"合并后，只有一个司令，其他都是下属",-1),g=a("p",null,"常用工具：",-1),b=a("ul",null,[a("li",null,"数组：root - 索引")],-1),v=a("p",null,[a("img",{src:"/leetcode/assets/pic-union.999d7804.png",alt:""})],-1),x=a("p",null,"模板整理理解：",-1),j=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// 并查集模板"),t("\n"),a("span",{class:"token keyword"},"class"),t(),a("span",{class:"token class-name"},"UniFind"),t(),a("span",{class:"token punctuation"},"{"),t("\n    root "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),t("\n    count "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),t("\n\n    "),a("span",{class:"token function"},"constructor"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("grid "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"]")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" row "),a("span",{class:"token operator"},"="),t(" grid"),a("span",{class:"token punctuation"},"."),t("length\n        "),a("span",{class:"token keyword"},"const"),t(" col "),a("span",{class:"token operator"},"="),t(" grid"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"."),t("length\n\n        "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count "),a("span",{class:"token operator"},"="),t(" row "),a("span",{class:"token operator"},"*"),t(" col\n        "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"Array"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"<"),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(" i\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\t"),a("span",{class:"token comment"},"// 递归找 root 索引"),t("\n    "),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"x"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("x "),a("span",{class:"token operator"},"==="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"return"),t(" x\n        "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token comment"},"//return this.root[x] = this.find(this.root[x])"),t("\n        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n\t"),a("span",{class:"token comment"},"// 同化操作"),t("\n    "),a("span",{class:"token function"},"union"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("x "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" rootX "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" rootY "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("y"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("rootX "),a("span",{class:"token operator"},"!=="),t(" rootY"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("rootX"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(" rootY\n            "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count "),a("span",{class:"token operator"},"-="),t(),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token function"},"getCount"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count\n    "),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),C=a("p",null,"练习题：",-1),_=a("ul",null,[a("li",null,"200"),a("li",null,"547")],-1),q=a("h2",{id:"进阶版本"},[a("a",{class:"header-anchor",href:"#进阶版本","aria-hidden":"true"},"#"),t(" 进阶版本")],-1),B=a("ul",null,[a("li",null,"find——> quickFind")],-1),A=a("p",null,"快速找到 根节点 root：每次递归后，更改原来错误的 root，方便下一次查找",-1),X=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// 递归找 root 索引"),t("\n    "),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"x"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("x "),a("span",{class:"token operator"},"==="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"return"),t(" x\n        "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token comment"},"// return this.root[x]"),t("\n        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),Y=a("ul",null,[a("li",null,"路径压缩：权重法")],-1),F=a("p",null,"例子：",-1),M=a("p",null,"2 棵不同高度的树合并，不是随意的直接合并，而是将 改动少的方案作为最有选择：高度少的树改动，高度多的不动。",-1),Q=a("hr",null,null,-1),U=a("h2",{id:"题型一"},[a("a",{class:"header-anchor",href:"#题型一","aria-hidden":"true"},"#"),t(" 题型一")],-1),V=a("h3",{id:"_200-岛屿数量"},[a("a",{class:"header-anchor",href:"#_200-岛屿数量","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/number-of-islands/",target:"_blank",rel:"noopener noreferrer"},"200. 岛屿数量")],-1),D=a("p",null,"难度中等",-1),I=a("p",null,[t("给你一个由 "),a("code",null,"'1'"),t("（陆地）和 "),a("code",null,"'0'"),t("（水）组成的的二维网格，请你计算网格中岛屿的数量。")],-1),z=a("p",null,"岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。",-1),G=a("p",null,"此外，你可以假设该网格的四条边均被水包围。",-1),L=a("p",null,[a("strong",null,"示例 1：")],-1),N=a("div",{class:"language-"},[a("pre",null,[a("code",null,'输入：grid = [\n  ["1","1","1","1","0"],\n  ["1","1","0","1","0"],\n  ["1","1","0","0","0"],\n  ["0","0","0","0","0"]\n]\n输出：1\n')])],-1),O=a("p",null,[a("strong",null,"示例 2：")],-1),S=a("div",{class:"language-"},[a("pre",null,[a("code",null,'输入：grid = [\n  ["1","1","0","0","0"],\n  ["1","1","0","0","0"],\n  ["0","0","1","0","0"],\n  ["0","0","0","1","1"]\n]\n输出：3\n')])],-1),E=a("p",null,[a("strong",null,"提示：")],-1),P=a("ul",null,[a("li",null,[a("code",null,"m == grid.length")]),a("li",null,[a("code",null,"n == grid[i].length")]),a("li",null,[a("code",null,"1 <= m, n <= 300")]),a("li",null,[a("code",null,"grid[i][j]"),t(" 的值为 "),a("code",null,"'0'"),t(" 或 "),a("code",null,"'1'")])],-1),H=a("hr",null,null,-1),J=a("ul",null,[a("li",null,[t("视频："),a("a",{href:"https://www.bilibili.com/video/BV1sy4y1q79M?p=69",target:"_blank",rel:"noopener noreferrer"},"https://www.bilibili.com/video/BV1sy4y1q79M?p=69")]),a("li",null,[t("题解："),a("a",{href:"https://mp.weixin.qq.com/s/it_asGIDqQBoOrzdL1j2CQ",target:"_blank",rel:"noopener noreferrer"},"https://mp.weixin.qq.com/s/it_asGIDqQBoOrzdL1j2CQ")]),a("li",null,"代码：")],-1),K=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"numIslands"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"grid"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("grid "),a("span",{class:"token operator"},"==="),t(),a("span",{class:"token keyword"},"null"),t(),a("span",{class:"token operator"},"||"),t(),a("span",{class:"token operator"},"!"),t("grid"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token number"},"0"),t("\n\n    "),a("span",{class:"token keyword"},"let"),t(" result "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),t("\n\n    "),a("span",{class:"token comment"},"// 行数 "),t("\n    "),a("span",{class:"token keyword"},"const"),t(" row "),a("span",{class:"token operator"},"="),t(" grid"),a("span",{class:"token punctuation"},"."),t("length\n    "),a("span",{class:"token comment"},"// 列数"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" col "),a("span",{class:"token operator"},"="),t(" grid"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"."),t("length\n\n    "),a("span",{class:"token keyword"},"let"),t(" waters "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),t("\n\n    "),a("span",{class:"token keyword"},"const"),t(" uf "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"UniFind"),a("span",{class:"token punctuation"},"("),t("grid"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" row"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" j "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" j "),a("span",{class:"token operator"},"<"),t(" col"),a("span",{class:"token punctuation"},";"),t(" j"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n                "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("grid"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),t("j"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"=="),t(),a("span",{class:"token string"},"'0'"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n                    waters"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},";"),t("\n                "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n                    "),a("span",{class:"token keyword"},"const"),t(" directions "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},";"),t("\n                    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" dir "),a("span",{class:"token keyword"},"of"),t(" directions"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n                        "),a("span",{class:"token keyword"},"const"),t(" x "),a("span",{class:"token operator"},"="),t(" i "),a("span",{class:"token operator"},"+"),t(" dir"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},";"),t("\n                        "),a("span",{class:"token keyword"},"const"),t(" y "),a("span",{class:"token operator"},"="),t(" j "),a("span",{class:"token operator"},"+"),t(" dir"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},";"),t("\n                        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("x "),a("span",{class:"token operator"},">="),t(),a("span",{class:"token number"},"0"),t(),a("span",{class:"token operator"},"&&"),t(" y "),a("span",{class:"token operator"},">="),t(),a("span",{class:"token number"},"0"),t(),a("span",{class:"token operator"},"&&"),t(" x "),a("span",{class:"token operator"},"<"),t(" row "),a("span",{class:"token operator"},"&&"),t(" y "),a("span",{class:"token operator"},"<"),t(" col "),a("span",{class:"token operator"},"&&"),t(" grid"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),t("y"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"=="),t(),a("span",{class:"token string"},"'1'"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n                            uf"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"union"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token operator"},"*"),t("col"),a("span",{class:"token operator"},"+"),t("y"),a("span",{class:"token punctuation"},","),t(" i"),a("span",{class:"token operator"},"*"),t("col"),a("span",{class:"token operator"},"+"),t("j"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n                        "),a("span",{class:"token punctuation"},"}"),t("\n                    "),a("span",{class:"token punctuation"},"}"),t("\n                "),a("span",{class:"token punctuation"},"}"),t("\n            "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" uf"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"getCount"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"-"),t(" waters"),a("span",{class:"token punctuation"},";"),t("\n    \n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"class"),t(),a("span",{class:"token class-name"},"UniFind"),t(),a("span",{class:"token punctuation"},"{"),t("\n    root "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),t("\n    count "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),t("\n\n    "),a("span",{class:"token function"},"constructor"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("grid "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"]")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" row "),a("span",{class:"token operator"},"="),t(" grid"),a("span",{class:"token punctuation"},"."),t("length\n        "),a("span",{class:"token keyword"},"const"),t(" col "),a("span",{class:"token operator"},"="),t(" grid"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"."),t("length\n\n        "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count "),a("span",{class:"token operator"},"="),t(" row "),a("span",{class:"token operator"},"*"),t(" col\n        "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"Array"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"<"),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(" i\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"x"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("x "),a("span",{class:"token operator"},"==="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"return"),t(" x\n        "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("x"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token function"},"union"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("x "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" rootX "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" rootY "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("y"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("rootX "),a("span",{class:"token operator"},"!=="),t(" rootY"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("root"),a("span",{class:"token punctuation"},"["),t("rootX"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(" rootY\n            "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count "),a("span",{class:"token operator"},"-="),t(),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token function"},"getCount"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("count\n    "),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n")])])],-1),R=a("h3",{id:"_547-省份数量"},[a("a",{class:"header-anchor",href:"#_547-省份数量","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/number-of-provinces/",target:"_blank",rel:"noopener noreferrer"},"547. 省份数量")],-1),T=a("p",null,"难度中等",-1),W=a("p",null,[t("有 "),a("code",null,"n"),t(" 个城市，其中一些彼此相连，另一些没有相连。如果城市 "),a("code",null,"a"),t(" 与城市 "),a("code",null,"b"),t(" 直接相连，且城市 "),a("code",null,"b"),t(" 与城市 "),a("code",null,"c"),t(" 直接相连，那么城市 "),a("code",null,"a"),t(" 与城市 "),a("code",null,"c"),t(" 间接相连。")],-1),Z=a("p",null,[a("strong",null,"省份"),t(" 是一组直接或间接相连的城市，组内不含其他没有相连的城市。")],-1),$=a("p",null,[t("给你一个 "),a("code",null,"n x n"),t(" 的矩阵 "),a("code",null,"isConnected"),t(" ，其中 "),a("code",null,"isConnected[i][j] = 1"),t(" 表示第 "),a("code",null,"i"),t(" 个城市和第 "),a("code",null,"j"),t(" 个城市直接相连，而 "),a("code",null,"isConnected[i][j] = 0"),t(" 表示二者不直接相连。")],-1),nn=a("p",null,[t("返回矩阵中 "),a("strong",null,"省份"),t(" 的数量。")],-1),sn=a("p",null,[a("strong",null,"示例 1：")],-1),an=a("p",null,[a("img",{src:"https://assets.leetcode.com/uploads/2020/12/24/graph1.jpg",alt:"img"})],-1),tn=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：isConnected = [[1,1,0],[1,1,0],[0,0,1]]\n输出：2\n")])],-1),on=a("p",null,[a("strong",null,"示例 2：")],-1),en=a("p",null,[a("img",{src:"https://assets.leetcode.com/uploads/2020/12/24/graph2.jpg",alt:"img"})],-1),cn=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：isConnected = [[1,0,0],[0,1,0],[0,0,1]]\n输出：3\n")])],-1),pn=a("p",null,[a("strong",null,"提示：")],-1),ln=a("ul",null,[a("li",null,[a("code",null,"1 <= n <= 200")]),a("li",null,[a("code",null,"n == isConnected.length")]),a("li",null,[a("code",null,"n == isConnected[i].length")]),a("li",null,[a("code",null,"isConnected[i][j]"),t(" 为 "),a("code",null,"1"),t(" 或 "),a("code",null,"0")]),a("li",null,[a("code",null,"isConnected[i][i] == 1")]),a("li",null,[a("code",null,"isConnected[i][j] == isConnected[j][i]")])],-1),un=a("hr",null,null,-1),kn=a("ul",null,[a("li",null,[t("视频："),a("a",{href:"https://leetcode-cn.com/problems/number-of-provinces/solution/sheng-fen-shu-liang-by-leetcode-solution-eyk0/",target:"_blank",rel:"noopener noreferrer"},"https://leetcode-cn.com/problems/number-of-provinces/solution/sheng-fen-shu-liang-by-leetcode-solution-eyk0/")]),a("li",null,[t("题解："),a("a",{href:"https://leetcode-cn.com/problems/number-of-provinces/solution/sheng-fen-shu-liang-by-leetcode-solution-eyk0/",target:"_blank",rel:"noopener noreferrer"},"https://leetcode-cn.com/problems/number-of-provinces/solution/sheng-fen-shu-liang-by-leetcode-solution-eyk0/")])],-1),rn=a("p",null,"参考leetcode 官方题解",-1),dn=a("ul",null,[a("li",null,"方法1：并查集法")],-1),wn=a("p",null,"Code：",-1),yn=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"findCircleNum"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"isConnected"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" provinces "),a("span",{class:"token operator"},"="),t(" isConnected"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" parent "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"Array"),a("span",{class:"token punctuation"},"("),t("provinces"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"fill"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"map"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("_"),a("span",{class:"token punctuation"},","),t(" index")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(" index"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" provinces"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" j "),a("span",{class:"token operator"},"="),t(" i "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},";"),t(" j "),a("span",{class:"token operator"},"<"),t(" provinces"),a("span",{class:"token punctuation"},";"),t(" j"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("isConnected"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),t("j"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"=="),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n                "),a("span",{class:"token comment"},"// 找到城市，则为 父子关系"),t("\n                "),a("span",{class:"token function"},"union"),a("span",{class:"token punctuation"},"("),t("parent"),a("span",{class:"token punctuation"},","),t(" i"),a("span",{class:"token punctuation"},","),t(" j"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n            "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"let"),t(" circles "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token comment"},"// union 完成以后，只有 father-城市 的 index 和 element 值 是相等的，因此只要遍历出 值即可"),t("\n    parent"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"forEach"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("element"),a("span",{class:"token punctuation"},","),t(" index")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("element "),a("span",{class:"token operator"},"==="),t(" index"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            circles"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},";"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n\n    "),a("span",{class:"token keyword"},"return"),t(" circles"),a("span",{class:"token punctuation"},";"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n\n"),a("span",{class:"token comment"},"// 并操作"),t("\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"union"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("parent"),a("span",{class:"token punctuation"},","),t(" index1"),a("span",{class:"token punctuation"},","),t(" index2")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    parent"),a("span",{class:"token punctuation"},"["),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("parent"),a("span",{class:"token punctuation"},","),t(" index1"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("parent"),a("span",{class:"token punctuation"},","),t(" index2"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// 查操作"),t("\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"find"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("parent"),a("span",{class:"token punctuation"},","),t(" index")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 若没找到，则改变经过路径的 父节点值"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("parent"),a("span",{class:"token punctuation"},"["),t("index"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"!=="),t(" index"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        parent"),a("span",{class:"token punctuation"},"["),t("index"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"find"),a("span",{class:"token punctuation"},"("),t("parent"),a("span",{class:"token punctuation"},","),t(" parent"),a("span",{class:"token punctuation"},"["),t("index"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token comment"},"// 若找到，直接返回"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" parent"),a("span",{class:"token punctuation"},"["),t("index"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},";"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),mn=a("ul",null,[a("li",null,"方法2：DFS")],-1),fn=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"findCircleNum"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"isConnected"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" provinces "),a("span",{class:"token operator"},"="),t(" isConnected"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" visited "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"Set"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token keyword"},"let"),t(" circles "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" i "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" i "),a("span",{class:"token operator"},"<"),t(" provinces"),a("span",{class:"token punctuation"},";"),t(" i"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("visited"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"has"),a("span",{class:"token punctuation"},"("),t("i"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token function"},"dfs"),a("span",{class:"token punctuation"},"("),t("isConnected"),a("span",{class:"token punctuation"},","),t(" visited"),a("span",{class:"token punctuation"},","),t(" provinces"),a("span",{class:"token punctuation"},","),t(" i"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n            circles"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},";"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" circles"),a("span",{class:"token punctuation"},";"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"dfs"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("isConnected"),a("span",{class:"token punctuation"},","),t(" visited"),a("span",{class:"token punctuation"},","),t(" provinces"),a("span",{class:"token punctuation"},","),t(" i")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"let"),t(" j "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},";"),t(" j "),a("span",{class:"token operator"},"<"),t(" provinces"),a("span",{class:"token punctuation"},";"),t(" j"),a("span",{class:"token operator"},"++"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("isConnected"),a("span",{class:"token punctuation"},"["),t("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),t("j"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"=="),t(),a("span",{class:"token number"},"1"),t(),a("span",{class:"token operator"},"&&"),t(),a("span",{class:"token operator"},"!"),t("visited"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"has"),a("span",{class:"token punctuation"},"("),t("j"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            visited"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"add"),a("span",{class:"token punctuation"},"("),t("j"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n            "),a("span",{class:"token function"},"dfs"),a("span",{class:"token punctuation"},"("),t("isConnected"),a("span",{class:"token punctuation"},","),t(" visited"),a("span",{class:"token punctuation"},","),t(" provinces"),a("span",{class:"token punctuation"},","),t(" j"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1);e.render=function(a,t,o,e,hn,gn){return n(),s("div",null,[c,p,l,u,k,i,r,d,w,y,m,f,h,g,b,v,x,j,C,_,q,B,A,X,Y,F,M,Q,U,V,D,I,z,G,L,N,O,S,E,P,H,J,K,R,T,W,Z,$,nn,sn,an,tn,on,en,cn,pn,ln,un,kn,rn,dn,wn,yn,mn,fn])};export default e;export{o as __pageData};
