import{o as n,c as s,b as a,d as t}from"./app.7a265b72.js";const o='{"title":"二分查找法","description":"","frontmatter":{},"headers":[{"level":2,"title":"找位置/目标值","slug":"找位置-目标值"},{"level":3,"title":"704. 二分查找","slug":"_704-二分查找"},{"level":3,"title":"35. 搜索插入位置","slug":"_35-搜索插入位置"},{"level":3,"title":"162. 寻找峰值","slug":"_162-寻找峰值"},{"level":3,"title":"74. 搜索二维矩阵","slug":"_74-搜索二维矩阵"}],"relativePath":"advance/binary-search.md","lastUpdated":1633944908333}',l={},e=a("h1",{id:"二分查找法"},[a("a",{class:"header-anchor",href:"#二分查找法","aria-hidden":"true"},"#"),t(" 二分查找法")],-1),p=a("ul",null,[a("li",null,[a("p",null,"算法思想：")]),a("li",null,[a("p",null,"时间复杂度：log2 N")])],-1),c=a("p",null,"例题：",-1),u=a("ul",null,[a("li",null,"704"),a("li",null,"35"),a("li",null,"162"),a("li",null,"74")],-1),r=a("h2",{id:"找位置-目标值"},[a("a",{class:"header-anchor",href:"#找位置-目标值","aria-hidden":"true"},"#"),t(" 找位置/目标值")],-1),k=a("h3",{id:"_704-二分查找"},[a("a",{class:"header-anchor",href:"#_704-二分查找","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/binary-search/",target:"_blank",rel:"noopener noreferrer"},"704. 二分查找")],-1),i=a("p",null,"难度简单",-1),m=a("p",null,[t("给定一个 "),a("code",null,"n"),t(" 个元素有序的（升序）整型数组 "),a("code",null,"nums"),t(" 和一个目标值 "),a("code",null,"target"),t(" ，写一个函数搜索 "),a("code",null,"nums"),t(" 中的 "),a("code",null,"target"),t("，如果目标值存在返回下标，否则返回 "),a("code",null,"-1"),t("。")],-1),d=a("p",null,[a("strong",null,"示例 1:")],-1),g=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n")])],-1),h=a("p",null,[a("strong",null,"示例 2:")],-1),f=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n")])],-1),y=a("p",null,[a("strong",null,"提示：")],-1),w=a("ol",null,[a("li",null,[t("你可以假设 "),a("code",null,"nums"),t(" 中的所有元素是不重复的。")]),a("li",null,[a("code",null,"n"),t(" 将在 "),a("code",null,"[1, 10000]"),t("之间。")]),a("li",null,[a("code",null,"nums"),t(" 的每个元素都将在 "),a("code",null,"[-9999, 9999]"),t("之间。")])],-1),b=a("hr",null,null,-1),v=a("ul",null,[a("li",null,"方法："),a("li",null,"题解："),a("li",null,"答案：")],-1),x=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"search"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("nums"),a("span",{class:"token punctuation"},","),t(" target")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("nums"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),t("\n    "),a("span",{class:"token keyword"},"let"),t(" left "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" right "),a("span",{class:"token operator"},"="),t(" nums"),a("span",{class:"token punctuation"},"."),t("length "),a("span",{class:"token operator"},"-"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},";"),t("\n    "),a("span",{class:"token keyword"},"while"),a("span",{class:"token punctuation"},"("),t("left "),a("span",{class:"token operator"},"<="),t(" right"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// left + (right - left)/2 的作用是避免 left + right 超过边界"),t("\n        "),a("span",{class:"token keyword"},"let"),t(" mid "),a("span",{class:"token operator"},"="),t(" Math"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"floor"),a("span",{class:"token punctuation"},"("),t("left "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token punctuation"},"("),t("right "),a("span",{class:"token operator"},"-"),t(" left"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"/"),t(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("nums"),a("span",{class:"token punctuation"},"["),t("mid"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"==="),t(" target"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(" mid\n        "),a("span",{class:"token comment"},"// 中间值小于目标值，左指针右移"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("nums"),a("span",{class:"token punctuation"},"["),t("mid"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"<"),t(" target "),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            left "),a("span",{class:"token operator"},"="),t(" mid "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// 中间值大于目标值，右指针左移"),t("\n            right "),a("span",{class:"token operator"},"="),t(" mid "),a("span",{class:"token operator"},"-"),t(),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),_=a("h3",{id:"_35-搜索插入位置"},[a("a",{class:"header-anchor",href:"#_35-搜索插入位置","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/search-insert-position/",target:"_blank",rel:"noopener noreferrer"},"35. 搜索插入位置")],-1),j=a("p",null,"难度简单",-1),M=a("p",null,"给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。",-1),I=a("p",null,"你可以假设数组中无重复元素。",-1),N=a("p",null,[a("strong",null,"示例 1:")],-1),O=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入: [1,3,5,6], 5\n输出: 2\n")])],-1),P=a("p",null,[a("strong",null,"示例 2:")],-1),q=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入: [1,3,5,6], 2\n输出: 1\n")])],-1),E=a("p",null,[a("strong",null,"示例 3:")],-1),U=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入: [1,3,5,6], 7\n输出: 4\n")])],-1),z=a("p",null,[a("strong",null,"示例 4:")],-1),A=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入: [1,3,5,6], 0\n输出: 0\n")])],-1),B=a("hr",null,null,-1),C=a("ul",null,[a("li",null,"方法："),a("li",null,"题解："),a("li",null,"答案：")],-1),D=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"searchInsert"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("nums"),a("span",{class:"token punctuation"},","),t(" target")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("nums "),a("span",{class:"token operator"},"||"),t(),a("span",{class:"token operator"},"!"),t("nums"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token number"},"0"),t("\n    "),a("span",{class:"token keyword"},"let"),t(" l "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" r "),a("span",{class:"token operator"},"="),t(" nums"),a("span",{class:"token punctuation"},"."),t("length "),a("span",{class:"token operator"},"-"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},";"),t("\n    \n    "),a("span",{class:"token comment"},"// 先用 二分法做"),t("\n    "),a("span",{class:"token keyword"},"while"),a("span",{class:"token punctuation"},"("),t("l "),a("span",{class:"token operator"},"<="),t(" r"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"let"),t(" mid "),a("span",{class:"token operator"},"="),t(" Math"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"floor"),a("span",{class:"token punctuation"},"("),t("l "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token punctuation"},"("),t("r"),a("span",{class:"token operator"},"-"),t("l"),a("span",{class:"token punctuation"},")"),a("span",{class:"token operator"},"/"),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("nums"),a("span",{class:"token punctuation"},"["),t("mid"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"==="),t(" target"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(" mid\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("nums"),a("span",{class:"token punctuation"},"["),t("mid"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"<"),t(" target"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            l "),a("span",{class:"token operator"},"="),t(" mid "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n            r "),a("span",{class:"token operator"},"="),t(" mid "),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token comment"},"// 二分法没找到，说明不存在，那么此时 左指针和右指针中间，就是 target 该插入的位置，因为 l = mid + 1，所以直接取 l"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" l\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),F=a("h3",{id:"_162-寻找峰值"},[a("a",{class:"header-anchor",href:"#_162-寻找峰值","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/find-peak-element/",target:"_blank",rel:"noopener noreferrer"},"162. 寻找峰值")],-1),G=a("p",null,"难度中等",-1),H=a("p",null,"峰值元素是指其值大于左右相邻值的元素。",-1),J=a("p",null,[t("给你一个输入数组 "),a("code",null,"nums"),t("，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 "),a("strong",null,"任何一个峰值"),t(" 所在位置即可。")],-1),K=a("p",null,[t("你可以假设 "),a("code",null,"nums[-1] = nums[n] = -∞"),t(" 。")],-1),L=a("p",null,[a("strong",null,"示例 1：")],-1),Q=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n")])],-1),R=a("p",null,[a("strong",null,"示例 2：")],-1),S=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5 \n解释：你的函数可以返回索引 1，其峰值元素为 2；\n     或者返回索引 5， 其峰值元素为 6。\n")])],-1),T=a("p",null,[a("strong",null,"提示：")],-1),V=a("ul",null,[a("li",null,[a("code",null,"1 <= nums.length <= 1000")]),a("li",null,[a("code",null,"-231 <= nums[i] <= 231 - 1")]),a("li",null,[t("对于所有有效的 "),a("code",null,"i"),t(" 都有 "),a("code",null,"nums[i] != nums[i + 1]")])],-1),W=a("p",null,[t("**进阶：**你可以实现时间复杂度为 "),a("code",null,"O(logN)"),t(" 的解决方案吗？")],-1),X=a("hr",null,null,-1),Y=a("ul",null,[a("li",null,"方法："),a("li",null,"题解："),a("li",null,"答案：")],-1),Z=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\n * @param {number[]} nums\n * @return {number}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"findPeakElement"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"nums"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("nums "),a("span",{class:"token operator"},"||"),t(),a("span",{class:"token operator"},"!"),t("nums"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),t("\n    nums"),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"Infinity"),t("\n    nums"),a("span",{class:"token punctuation"},"["),t("nums"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"Infinity"),t("\n\n    "),a("span",{class:"token keyword"},"let"),t(" l "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" r "),a("span",{class:"token operator"},"="),t(" nums"),a("span",{class:"token punctuation"},"."),t("length "),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),t("\n\n    "),a("span",{class:"token keyword"},"while"),t(),a("span",{class:"token punctuation"},"("),t("l "),a("span",{class:"token operator"},"<"),t(" r"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"let"),t(" mid "),a("span",{class:"token operator"},"="),t(" Math"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"floor"),a("span",{class:"token punctuation"},"("),t("l "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token punctuation"},"("),t("r"),a("span",{class:"token operator"},"-"),t("l"),a("span",{class:"token punctuation"},")"),a("span",{class:"token operator"},"/"),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token comment"},"// 如果中间值小于右边值，则右边可能为峰值，左指针右移"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("nums"),a("span",{class:"token punctuation"},"["),t("mid"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"<"),t(" nums"),a("span",{class:"token punctuation"},"["),t("mid "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            l "),a("span",{class:"token operator"},"="),t(" mid "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// 如果中间值大于右边值，则左边可能为峰值，右指针左移"),t("\n            r "),a("span",{class:"token operator"},"="),t(" mid\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" l\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),$=a("h3",{id:"_74-搜索二维矩阵"},[a("a",{class:"header-anchor",href:"#_74-搜索二维矩阵","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/search-a-2d-matrix/",target:"_blank",rel:"noopener noreferrer"},"74. 搜索二维矩阵")],-1),nn=a("p",null,"难度中等",-1),sn=a("p",null,[t("编写一个高效的算法来判断 "),a("code",null,"m x n"),t(" 矩阵中，是否存在一个目标值。该矩阵具有如下特性：")],-1),an=a("ul",null,[a("li",null,"每行中的整数从左到右按升序排列。"),a("li",null,"每行的第一个整数大于前一行的最后一个整数。")],-1),tn=a("p",null,[a("strong",null,"示例 1：")],-1),on=a("p",null,[a("img",{src:"https://assets.leetcode.com/uploads/2020/10/05/mat.jpg",alt:"img"})],-1),ln=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n输出：true\n")])],-1),en=a("p",null,[a("strong",null,"示例 2：")],-1),pn=a("p",null,[a("img",{src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/11/25/mat2.jpg",alt:"img"})],-1),cn=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n输出：false\n")])],-1),un=a("p",null,[a("strong",null,"提示：")],-1),rn=a("ul",null,[a("li",null,[a("code",null,"m == matrix.length")]),a("li",null,[a("code",null,"n == matrix[i].length")]),a("li",null,[a("code",null,"1 <= m, n <= 100")]),a("li",null,[a("code",null,"-104 <= matrix[i][j], target <= 104")])],-1),kn=a("hr",null,null,-1),mn=a("ul",null,[a("li",null,[a("p",null,"方法："),a("ul",null,[a("li",null,"方法1：直接将二维转换成 一维数组，再利用二分法；"),a("li",null,"方法2：在二维数组中利用二分法做"),a("li",null,"难点：利用二分法做，左右指针的移动，以及中间值的位置，看图：")]),a("blockquote",null,[a("p",null,[t("二维矩阵中，某一个元素的坐标转换成一维的公式：为 "),a("code",null,"(x,y) === x * 列数量 + y"),t("，如："),a("code",null,"(1,2) === 1 * 4 + 2"),t(" 为 第 6 个元素；")]),a("p",null,[t("反过来，我们从一维角度推出二维坐标则是："),a("code",null,"ele = matrix[Math.floor(mid / col)][mid % col]"),t(" ，横坐标用 商数，纵坐标用余数。")]),a("p",null,[a("img",{src:"/leetcode/assets/pic-01.84c4763f.png",alt:""})])])]),a("li",null,[a("p",null,"题解：")]),a("li",null,[a("p",null,"答案：")])],-1),dn=a("p",null,"方法1：",-1),gn=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"searchMatrix"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("matrix"),a("span",{class:"token punctuation"},","),t(" target")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" arr "),a("span",{class:"token operator"},"="),t(" matrix"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"reduce"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("pre"),a("span",{class:"token punctuation"},","),t(" cur")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" result "),a("span",{class:"token operator"},"="),t(" pre"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"concat"),a("span",{class:"token punctuation"},"("),t("cur"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token keyword"},"return"),t(" result\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" arr"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"includes"),a("span",{class:"token punctuation"},"("),t("target"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n\n"),a("span",{class:"token comment"},"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"searchMatrix"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("matrix"),a("span",{class:"token punctuation"},","),t(" target")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" matrix"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"flat"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"indexOf"),a("span",{class:"token punctuation"},"("),t("target"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},">"),t(),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},";"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),hn=a("p",null,"方法2：",-1),fn=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"searchMatrix"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("matrix"),a("span",{class:"token punctuation"},","),t(" target")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("matrix "),a("span",{class:"token operator"},"||"),t(),a("span",{class:"token operator"},"!"),t("matrix"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token boolean"},"false"),t("\n\n    "),a("span",{class:"token comment"},"// 行数"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" row "),a("span",{class:"token operator"},"="),t(" matrix"),a("span",{class:"token punctuation"},"."),t("length\n    "),a("span",{class:"token comment"},"// 列数"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" col "),a("span",{class:"token operator"},"="),t(" matrix"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"."),t("length\n\t"),a("span",{class:"token comment"},"// 左指针为 0 ，右指针 为 二维数组的最后一个子数组最后一个位置"),t("\n    "),a("span",{class:"token keyword"},"let"),t(" l "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" r "),a("span",{class:"token operator"},"="),t(" row "),a("span",{class:"token operator"},"*"),t(" col"),a("span",{class:"token punctuation"},";"),t("\n\n    "),a("span",{class:"token comment"},"// 指针按照一维数组来移动，即左右移动；中间值则用 2 个坐标值来计算"),t("\n    "),a("span",{class:"token keyword"},"while"),a("span",{class:"token punctuation"},"("),t("l "),a("span",{class:"token operator"},"<"),t(" r"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// 有序二维数组中，取中间值的位置 (r-l) / 2"),t("\n        "),a("span",{class:"token keyword"},"let"),t(" mid "),a("span",{class:"token operator"},"="),t(" Math"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"floor"),a("span",{class:"token punctuation"},"("),t("l "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token punctuation"},"("),t("r "),a("span",{class:"token operator"},"-"),t(" l"),a("span",{class:"token punctuation"},")"),a("span",{class:"token operator"},"/"),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token comment"},"// 核心代码在这里"),t("\n        "),a("span",{class:"token comment"},"// 若二维数组为 5*4， mid 为 10，则位置为第 3 行第2个；"),t("\n        "),a("span",{class:"token comment"},"// 对应坐标计算为：横坐标 = mid % 列 ; 纵坐标 = mid / 行数"),t("\n        "),a("span",{class:"token keyword"},"const"),t(" ele "),a("span",{class:"token operator"},"="),t(" matrix"),a("span",{class:"token punctuation"},"["),t("Math"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"floor"),a("span",{class:"token punctuation"},"("),t("mid "),a("span",{class:"token operator"},"/"),t(" col"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),t("mid "),a("span",{class:"token operator"},"%"),t(" col"),a("span",{class:"token punctuation"},"]"),t("\n\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("ele "),a("span",{class:"token operator"},"==="),t(" target"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token boolean"},"true"),t("\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("ele "),a("span",{class:"token operator"},">"),t(" target"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token comment"},"// 右指针左移"),t("\n            r "),a("span",{class:"token operator"},"="),t(" mid\n        "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n            l "),a("span",{class:"token operator"},"="),t(" mid "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token boolean"},"false"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1);l.render=function(a,t,o,l,yn,wn){return n(),s("div",null,[e,p,c,u,r,k,i,m,d,g,h,f,y,w,b,v,x,_,j,M,I,N,O,P,q,E,U,z,A,B,C,D,F,G,H,J,K,L,Q,R,S,T,V,W,X,Y,Z,$,nn,sn,an,tn,on,ln,en,pn,cn,un,rn,kn,mn,dn,gn,hn,fn])};export default l;export{o as __pageData};
