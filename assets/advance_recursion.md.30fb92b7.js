import{o as n,c as s,b as a,d as t}from"./app.a0fc6f0b.js";const e='{"title":"递归算法","description":"","frontmatter":{},"headers":[{"level":2,"title":"题型一","slug":"题型一"},{"level":3,"title":"509. 斐波那契数","slug":"_509-斐波那契数"},{"level":3,"title":"206. 反转链表","slug":"_206-反转链表"},{"level":3,"title":"344. 反转字符串","slug":"_344-反转字符串"}],"relativePath":"advance/recursion.md","lastUpdated":1635257730423}',o={},l=a("h1",{id:"递归算法"},[a("a",{class:"header-anchor",href:"#递归算法","aria-hidden":"true"},"#"),t(" 递归算法")],-1),p=a("p",null,"自己调用自己，时间复杂度为 O(n)",-1),c=a("p",null,[t("视频："),a("a",{href:"https://www.bilibili.com/video/BV1sy4y1q79M?p=57",target:"_blank",rel:"noopener noreferrer"},"https://www.bilibili.com/video/BV1sy4y1q79M?p=57")],-1),u=a("p",null,[a("strong",null,"学习方法：需要自己动手画图理解思想")],-1),r=a("p",null,"例题：",-1),k=a("ul",null,[a("li",null,"509"),a("li",null,"206"),a("li",null,"344")],-1),i=a("p",null,"递归算法四要素：",-1),d=a("ul",null,[a("li",null,"参数"),a("li",null,"终止条件"),a("li",null,"拆解"),a("li",null,"返回值")],-1),m=a("h2",{id:"题型一"},[a("a",{class:"header-anchor",href:"#题型一","aria-hidden":"true"},"#"),t(" 题型一")],-1),h=a("h3",{id:"_509-斐波那契数"},[a("a",{class:"header-anchor",href:"#_509-斐波那契数","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/fibonacci-number/",target:"_blank",rel:"noopener noreferrer"},"509. 斐波那契数")],-1),f=a("p",null,"难度简单",-1),w=a("p",null,[a("strong",null,"斐波那契数"),t("，通常用 "),a("code",null,"F(n)"),t(" 表示，形成的序列称为 "),a("strong",null,"斐波那契数列"),t(" 。该数列由 "),a("code",null,"0"),t(" 和 "),a("code",null,"1"),t(" 开始，后面的每一项数字都是前面两项数字的和。也就是：")],-1),y=a("div",{class:"language-"},[a("pre",null,[a("code",null,"F(0) = 0，F(1) = 1\nF(n) = F(n - 1) + F(n - 2)，其中 n > 1\n")])],-1),g=a("p",null,[t("给你 "),a("code",null,"n"),t(" ，请计算 "),a("code",null,"F(n)"),t(" 。")],-1),b=a("p",null,[a("strong",null,"示例 1：")],-1),v=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：2\n输出：1\n解释：F(2) = F(1) + F(0) = 1 + 0 = 1\n")])],-1),x=a("p",null,[a("strong",null,"示例 2：")],-1),F=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：3\n输出：2\n解释：F(3) = F(2) + F(1) = 1 + 1 = 2\n")])],-1),_=a("p",null,[a("strong",null,"示例 3：")],-1),L=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入：4\n输出：3\n解释：F(4) = F(3) + F(2) = 2 + 1 = 3\n")])],-1),N=a("p",null,[a("strong",null,"提示：")],-1),B=a("ul",null,[a("li",null,[a("code",null,"0 <= n <= 30")])],-1),j=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\n * @param {number} n\n * @return {number}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"fib"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"n"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("n "),a("span",{class:"token operator"},"<"),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"return"),t(" n "),a("span",{class:"token operator"},"==="),t(),a("span",{class:"token number"},"1"),t(),a("span",{class:"token operator"},"?"),t(),a("span",{class:"token number"},"1"),t(),a("span",{class:"token operator"},":"),t(),a("span",{class:"token number"},"0"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token keyword"},"const"),t(" sum "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"fib"),a("span",{class:"token punctuation"},"("),t("n"),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token function"},"fib"),a("span",{class:"token punctuation"},"("),t("n"),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),t("\n\n  "),a("span",{class:"token keyword"},"return"),t(" sum\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),q=a("h3",{id:"_206-反转链表"},[a("a",{class:"header-anchor",href:"#_206-反转链表","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"},"206. 反转链表")],-1),E=a("p",null,"难度简单1691收藏分享切换为英文接收动态反馈",-1),M=a("p",null,"反转一个单链表。",-1),V=a("p",null,[a("strong",null,"示例:")],-1),I=a("div",{class:"language-"},[a("pre",null,[a("code",null,"输入: 1->2->3->4->5->NULL\n输出: 5->4->3->2->1->NULL\n")])],-1),S=a("p",null,[a("strong",null,"进阶:"),t(" 你可以迭代或递归地反转链表。你能否用两种方法解决这道题？")],-1),A=a("hr",null,null,-1),C=a("ul",null,[a("li",null,[a("p",null,"方法：")]),a("li",null,[a("p",null,"题解：")]),a("li",null,[a("p",null,[t("视频："),a("a",{href:"https://www.bilibili.com/video/BV1sy4y1q79M?p=59",target:"_blank",rel:"noopener noreferrer"},"https://www.bilibili.com/video/BV1sy4y1q79M?p=59")])]),a("li",null,[a("p",null,"方法图："),a("p",null,[a("img",{src:"/leetcode/assets/pic-0101.6fdf594c.png",alt:""})])]),a("li",null,[a("p",null,"答案：")])],-1),D=a("p",null,"迭代方法：",-1),U=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token operator"},"**"),t("\n "),a("span",{class:"token operator"},"*"),t(" Definition "),a("span",{class:"token keyword"},"for"),t(" singly"),a("span",{class:"token operator"},"-"),t("linked list"),a("span",{class:"token punctuation"},"."),t("\n "),a("span",{class:"token operator"},"*"),t(),a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"ListNode"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("val"),a("span",{class:"token punctuation"},","),t(" next")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n "),a("span",{class:"token operator"},"*"),t("     "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("val "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),t("val"),a("span",{class:"token operator"},"==="),a("span",{class:"token keyword"},"undefined"),t(),a("span",{class:"token operator"},"?"),t(),a("span",{class:"token number"},"0"),t(),a("span",{class:"token operator"},":"),t(" val"),a("span",{class:"token punctuation"},")"),t("\n "),a("span",{class:"token operator"},"*"),t("     "),a("span",{class:"token keyword"},"this"),a("span",{class:"token punctuation"},"."),t("next "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),t("next"),a("span",{class:"token operator"},"==="),a("span",{class:"token keyword"},"undefined"),t(),a("span",{class:"token operator"},"?"),t(),a("span",{class:"token keyword"},"null"),t(),a("span",{class:"token operator"},":"),t(" next"),a("span",{class:"token punctuation"},")"),t("\n "),a("span",{class:"token operator"},"*"),t(),a("span",{class:"token punctuation"},"}"),t("\n "),a("span",{class:"token operator"},"*"),a("span",{class:"token operator"},"/"),t("\n"),a("span",{class:"token comment"},"/**\n * @param {ListNode} head\n * @return {ListNode}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"reverseList"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"head"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"let"),t(" dummy "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"new"),t(),a("span",{class:"token class-name"},"ListNode"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n  dummy"),a("span",{class:"token punctuation"},"."),t("next "),a("span",{class:"token operator"},"="),t(" head\n  "),a("span",{class:"token comment"},"//dummy->1->2->3->4->5"),t("\n  "),a("span",{class:"token keyword"},"while"),t(),a("span",{class:"token punctuation"},"("),t("head "),a("span",{class:"token operator"},"&&"),t(" head"),a("span",{class:"token punctuation"},"."),t("next"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"let"),t(" dnext "),a("span",{class:"token operator"},"="),t(" dummy"),a("span",{class:"token punctuation"},"."),t("next\n    "),a("span",{class:"token keyword"},"let"),t(" hnext "),a("span",{class:"token operator"},"="),t(" head"),a("span",{class:"token punctuation"},"."),t("next\n    "),a("span",{class:"token comment"},"// 暂存 2"),t("\n    dummy"),a("span",{class:"token punctuation"},"."),t("next "),a("span",{class:"token operator"},"="),t(" hnext\n    "),a("span",{class:"token comment"},"// 1->2 ==> 1->3"),t("\n    head"),a("span",{class:"token punctuation"},"."),t("next "),a("span",{class:"token operator"},"="),t(" hnext"),a("span",{class:"token punctuation"},"."),t("next\n    "),a("span",{class:"token comment"},"// 2->3 ==> 2-> dummy 即 2->1"),t("\n    hnext"),a("span",{class:"token punctuation"},"."),t("next "),a("span",{class:"token operator"},"="),t(" dnext\n  "),a("span",{class:"token punctuation"},"}"),t("\n  "),a("span",{class:"token keyword"},"return"),t(" dummy"),a("span",{class:"token punctuation"},"."),t("next\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),H=a("p",null,"递归法：",-1),O=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */"),t("\n"),a("span",{class:"token comment"},"/**\n * @param {ListNode} head\n * @return {ListNode}\n */"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"reverseList"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"head"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 结束条件 节点为空，或者节点为最后一个链表节点，返回上一层 head"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("head "),a("span",{class:"token operator"},"||"),t(),a("span",{class:"token operator"},"!"),t("head"),a("span",{class:"token punctuation"},"."),t("next"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(" head\n\n    "),a("span",{class:"token keyword"},"const"),t(" p "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"reverseList"),a("span",{class:"token punctuation"},"("),t("head"),a("span",{class:"token punctuation"},"."),t("next"),a("span",{class:"token punctuation"},")"),t("\n\n    head"),a("span",{class:"token punctuation"},"."),t("next"),a("span",{class:"token punctuation"},"."),t("next "),a("span",{class:"token operator"},"="),t(" head\n    head"),a("span",{class:"token punctuation"},"."),t("next "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"null"),t("\n    \n    "),a("span",{class:"token keyword"},"return"),t(" p\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1),P=a("p",null,"解释：",-1),z=a("p",null,"目的是反转，即：",-1),G=a("ul",null,[a("li",null,[t("举例为： "),a("code",null,"4->5"),t(" 更改指向 "),a("code",null,"4->3"),t(" ，同时将 "),a("code",null,"3->4"),t(" 更改为 "),a("code",null,"3->null")]),a("li",null,"即：改变自己的下一个指向后，将自己前面（上一个元素）的指向为 null"),a("li",null,"终止条件：元素为 null 或者下一个指向 为 null，则返回自己，结束递归")],-1),J=a("p",null,"链表题目不是很好理解，最好画图帮助理解",-1),K=a("h3",{id:"_344-反转字符串"},[a("a",{class:"header-anchor",href:"#_344-反转字符串","aria-hidden":"true"},"#"),t(),a("a",{href:"https://leetcode-cn.com/problems/reverse-string/",target:"_blank",rel:"noopener noreferrer"},"344. 反转字符串")],-1),Q=a("p",null,"难度简单368收藏分享切换为英文接收动态反馈",-1),R=a("p",null,[t("编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 "),a("code",null,"char[]"),t(" 的形式给出。")],-1),T=a("p",null,[t("不要给另外的数组分配额外的空间，你必须**"),a("a",{href:"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},"原地"),t("修改输入数组**、使用 O(1) 的额外空间解决这一问题。")],-1),W=a("p",null,[t("你可以假设数组中的所有字符都是 "),a("a",{href:"https://baike.baidu.com/item/ASCII",target:"_blank",rel:"noopener noreferrer"},"ASCII"),t(" 码表中的可打印字符。")],-1),X=a("p",null,[a("strong",null,"示例 1：")],-1),Y=a("div",{class:"language-"},[a("pre",null,[a("code",null,'输入：["h","e","l","l","o"]\n输出：["o","l","l","e","h"]\n')])],-1),Z=a("p",null,[a("strong",null,"示例 2：")],-1),$=a("div",{class:"language-"},[a("pre",null,[a("code",null,'输入：["H","a","n","n","a","h"]\n输出：["h","a","n","n","a","H"]\n')])],-1),nn=a("hr",null,null,-1),sn=a("ul",null,[a("li",null,"方法："),a("li",null,"题解："),a("li",null,[t("视频："),a("a",{href:"https://www.bilibili.com/video/BV1sy4y1q79M?p=60",target:"_blank",rel:"noopener noreferrer"},"https://www.bilibili.com/video/BV1sy4y1q79M?p=60")]),a("li",null,"答案："),a("li",null,"说明：递归方法有点取巧，值得反复看！！")],-1),an=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[t("\n"),a("span",{class:"token comment"},"// 递归 法"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"reverseString"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"s"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("s"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t("\n\n    "),a("span",{class:"token keyword"},"let"),t(" l "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" r "),a("span",{class:"token operator"},"="),t(" s"),a("span",{class:"token punctuation"},"."),t("length "),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),t("\n\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"recurversion"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("s"),a("span",{class:"token punctuation"},","),t(" l"),a("span",{class:"token punctuation"},","),t(" r")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("l "),a("span",{class:"token operator"},">="),t(" r"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t(" s\n\n        "),a("span",{class:"token function"},"recurversion"),a("span",{class:"token punctuation"},"("),t("s"),a("span",{class:"token punctuation"},","),t(" l"),a("span",{class:"token operator"},"+"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},","),t(" r"),a("span",{class:"token operator"},"-"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token keyword"},"const"),t(" temp "),a("span",{class:"token operator"},"="),t(" s"),a("span",{class:"token punctuation"},"["),t("l"),a("span",{class:"token punctuation"},"]"),t("\n        s"),a("span",{class:"token punctuation"},"["),t("l"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(" s"),a("span",{class:"token punctuation"},"["),t("r"),a("span",{class:"token punctuation"},"]"),t("\n        s"),a("span",{class:"token punctuation"},"["),t("r"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(" temp\n\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token function"},"recurversion"),a("span",{class:"token punctuation"},"("),t("s"),a("span",{class:"token punctuation"},","),t(" l"),a("span",{class:"token punctuation"},","),t(" r"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),tn=a("p",null,"也可以用双指针法：",-1),en=a("div",{class:"language-js"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n//  */"),t("\n"),a("span",{class:"token comment"},"// 双指针方法"),t("\n"),a("span",{class:"token keyword"},"var"),t(),a("span",{class:"token function-variable function"},"reverseString"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"function"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"s"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),t("s"),a("span",{class:"token punctuation"},"."),t("length"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t("\n\n    "),a("span",{class:"token keyword"},"let"),t(" l "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},","),t(" r "),a("span",{class:"token operator"},"="),t(" s"),a("span",{class:"token punctuation"},"."),t("length "),a("span",{class:"token operator"},"-"),t(),a("span",{class:"token number"},"1"),t("\n\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"swap"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[t("n1"),a("span",{class:"token punctuation"},","),t(" n2")]),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token punctuation"},"["),t("s"),a("span",{class:"token punctuation"},"["),t("n1"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t(" s"),a("span",{class:"token punctuation"},"["),t("n2"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),t("s"),a("span",{class:"token punctuation"},"["),t("n2"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t(" s"),a("span",{class:"token punctuation"},"["),t("n1"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"]"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token keyword"},"while"),a("span",{class:"token punctuation"},"("),t("l"),a("span",{class:"token operator"},"<"),t("r"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token function"},"swap"),a("span",{class:"token punctuation"},"("),t("l"),a("span",{class:"token punctuation"},","),t(" r"),a("span",{class:"token punctuation"},")"),t("\n        l "),a("span",{class:"token operator"},"++"),t("\n        r "),a("span",{class:"token operator"},"--"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"return"),t(" s\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t("\n")])])],-1);o.render=function(a,t,e,o,on,ln){return n(),s("div",null,[l,p,c,u,r,k,i,d,m,h,f,w,y,g,b,v,x,F,_,L,N,B,j,q,E,M,V,I,S,A,C,D,U,H,O,P,z,G,J,K,Q,R,T,W,X,Y,Z,$,nn,sn,an,tn,en])};export default o;export{e as __pageData};
